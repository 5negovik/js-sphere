"use strict";function _instanceof(e,t){return null!=t&&"undefined"!=typeof Symbol&&t[Symbol.hasInstance]?t[Symbol.hasInstance](e):e instanceof t}function _classCallCheck(e,t){if(!_instanceof(e,t))throw new TypeError("Cannot call a class as a function")}var Sphere=function e(t){var n=this;_classCallCheck(this,e),this.element=t.element||document.body,this.radius=t.radius||100,this.polygonsPerMeridian=t.polygonsPerMeridian||15,this.texture=t.texture||"",this.rotate="boolean"!=typeof t.rotate||t.rotate,this.rotationTime=t.rotationTime||10,this.diameter=2*this.radius,this.polygonSize=Math.ceil(this.radius*(2*Math.tan(Math.PI/(2*(this.polygonsPerMeridian-1))))),this.polygons=[],this.handlers={createSphereElement:function(){var e=document.createElement("div");return e.classList.add("sphere"),e.style.width="".concat(n.diameter,"px"),e.style.height="".concat(n.diameter,"px"),n.rotate&&(e.style.animation="rotate linear ".concat(n.rotationTime,"s infinite")),e},createMeridianElement:function(){var e=document.createElement("div");return e.classList.add("meridian"),e},createPolygonElement:function(e,t){var a=n.radius*Math.cos(t*(2*Math.PI)/(n.polygonsPerMeridian-1)),o=1-.2*(100-100*(n.radius-a)/(2*n.radius))/100,r=document.createElement("div");return r.classList.add("polygon"),r.style.backgroundImage="url('".concat(n.texture,"')"),r.style.backgroundPosition="".concat(-e*n.polygonSize,"px ").concat(-t*n.polygonSize,"px"),r.style.backgroundSize="".concat(2*(n.polygonsPerMeridian-1)*n.polygonSize,"px ").concat(n.polygonsPerMeridian*n.polygonSize,"px"),r.style.backgroundColor="rgb(".concat(0,", ",0,", ",255*t/n.polygonsPerMeridian,")"),r.style.transformOrigin="center center ".concat(-n.radius,"px"),r.style.width="".concat(n.polygonSize,"px"),r.style.height="".concat(n.polygonSize,"px"),r.style.transform="translateX(".concat(n.diameter/2-n.polygonSize/2,"px) translateY(").concat(n.diameter/2-n.polygonSize/2,"px) translateZ(").concat(n.radius,"px) rotateY(").concat(360*e/(2*(n.polygonsPerMeridian-1)),"deg) rotateZ(").concat(180*t/(n.polygonsPerMeridian-1)-90,"deg) rotate3d(0, 1, 0, 90deg) scaleX(").concat(o,")"),r},renderSphere:function(){for(var e=n.handlers.createSphereElement(),t=0;t<2*(n.polygonsPerMeridian-1);t++)for(var a=n.handlers.createMeridianElement(),o=0;o<n.polygonsPerMeridian;o++){var r=n.handlers.createPolygonElement(t,o);n.polygons.push(r),a.appendChild(r),e.appendChild(a)}n.element.appendChild(e)}},this.handlers.renderSphere()};